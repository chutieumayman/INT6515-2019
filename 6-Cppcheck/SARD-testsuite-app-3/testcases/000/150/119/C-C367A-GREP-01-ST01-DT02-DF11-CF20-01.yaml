description: "Creating test case using base program.\nAdded an environment variable read to the function definition.\nCompleted injection.\n"
io_pair:
  description: "This weakness expects a string in the form: '<file> <data>' where file is the name of a file that will be read to delay execution, and data is a string containing no spaces. The data string is treated as a filename in the testData directory. The weakness checks that the filename does not have any slashes in it and that it is a valid file. However, there is a time of check, time of use vulnerability after the file is checked but before it is opened allowing the file to be deleted. The weakness notifies the test harness that the that the file should be deleted by creating a file called testData/*.pid.\n\n"
  exploits:
    - inputs:
        - stage_enum: 0
          source: env_var_input
          id: source
          source_enum: 2
          stage: pre_process
          ordinal: 1
          name: DANEBROG_TRINTLE
          value: /opt/stonesoup/workspace/testData/fifo1 badfile1
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
        - source: script_input
          id: background-complex
          name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then REPLACE_FILE=\"${NEW_FILE%.pid}\"; sleep 1; echo \"Deleting: \" \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && rm -f \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && echo \"Deleted.\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
          ordinal: 2
          source_enum: 7
          stage: pre_process
          stage_enum: 0
        - source: script_input
          name: runFifos.py /opt/stonesoup/workspace/testData/fifo1 --nosync
          ordinal: 3
          source_enum: 7
          stage_enum: 0
          id: background
          stage: pre_process
        - value: This is yet another file.
          source_enum: 3
          stage_enum: 0
          ordinal: 4
          stage: pre_process
          source: file_content_input
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          name: /opt/stonesoup/workspace/testData/badfile1
    - inputs:
        - value_type_enum: 0
          source: env_var_input
          source_enum: 2
          stage: pre_process
          stage_enum: 0
          id: source
          ordinal: 1
          name: DANEBROG_TRINTLE
          value: /opt/stonesoup/workspace/testData/fifo1 badfile2
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
        - source: script_input
          source_enum: 7
          ordinal: 2
          stage: pre_process
          id: background-complex
          name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then REPLACE_FILE=\"${NEW_FILE%.pid}\"; sleep 1; echo \"Deleting: \" \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && rm -f \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && echo \"Deleted.\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
          stage_enum: 0
        - stage_enum: 0
          id: background
          source: script_input
          ordinal: 3
          source_enum: 7
          name: runFifos.py /opt/stonesoup/workspace/testData/fifo1 --nosync
          stage: pre_process
        - source_enum: 3
          value_encoding: none
          value_type_enum: 0
          source: file_content_input
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
          ordinal: 4
          name: /opt/stonesoup/workspace/testData/badfile2
          value: This is also file.
          stage_enum: 0
  base_inputs:
    - source: env_var_input
      source_enum: 2
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
      name: DANEBROG_TRINTLE
  benigns:
    - inputs:
        - stage_enum: 0
          source_enum: 2
          stage: pre_process
          ordinal: 1
          id: source
          name: DANEBROG_TRINTLE
          value: /opt/stonesoup/workspace/testData/file1 goodfile1
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          value_encoding: none
          source: env_var_input
        - stage: pre_process
          id: background-complex
          stage_enum: 0
          source: script_input
          ordinal: 2
          name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then REPLACE_FILE=\"${NEW_FILE%.pid}\"; sleep 1; echo \"Deleting: \" \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && rm -f \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && echo \"Deleted.\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
          source_enum: 7
        - stage_enum: 0
          source: file_content_input
          ordinal: 3
          name: /opt/stonesoup/workspace/testData/file1
          stage: pre_process
          source_enum: 3
        - ordinal: 4
          source_enum: 3
          source: file_content_input
          stage_enum: 0
          value_type: USE_TEXT_DIRECTLY
          value: A non-empty file.
          value_encoding: none
          value_type_enum: 0
          name: /opt/stonesoup/workspace/testData/goodfile1
          stage: pre_process
    - inputs:
        - stage_enum: 0
          source_enum: 2
          source: env_var_input
          name: DANEBROG_TRINTLE
          stage: pre_process
          id: source
          ordinal: 1
          value_type_enum: 0
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value: /opt/stonesoup/workspace/testData/file1 goodfile2
        - stage_enum: 0
          name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then REPLACE_FILE=\"${NEW_FILE%.pid}\"; sleep 1; echo \"Deleting: \" \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && rm -f \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && echo \"Deleted.\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
          id: background-complex
          source_enum: 7
          stage: pre_process
          source: script_input
          ordinal: 2
        - ordinal: 3
          stage_enum: 0
          stage: pre_process
          source: file_content_input
          source_enum: 3
          name: /opt/stonesoup/workspace/testData/file1
        - stage: pre_process
          stage_enum: 0
          source_enum: 3
          source: file_content_input
          value: This is a file.
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          name: /opt/stonesoup/workspace/testData/goodfile2
          ordinal: 4
    - inputs:
        - name: DANEBROG_TRINTLE
          value: /opt/stonesoup/workspace/testData/file1 goodfile3
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          source: env_var_input
          source_enum: 2
          stage: pre_process
          stage_enum: 0
          id: source
          ordinal: 1
        - id: background-complex
          ordinal: 2
          stage: pre_process
          stage_enum: 0
          source: script_input
          name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then REPLACE_FILE=\"${NEW_FILE%.pid}\"; sleep 1; echo \"Deleting: \" \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && rm -f \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && echo \"Deleted.\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
          source_enum: 7
        - stage_enum: 0
          ordinal: 3
          name: /opt/stonesoup/workspace/testData/file1
          source: file_content_input
          stage: pre_process
          source_enum: 3
        - stage_enum: 0
          source_enum: 3
          stage: pre_process
          source: file_content_input
          value_type: USE_TEXT_DIRECTLY
          value: This is another file.
          ordinal: 4
          value_encoding: none
          value_type_enum: 0
          name: /opt/stonesoup/workspace/testData/goodfile3
code_complexity_features:
  - file_name: /tmp/tmpcZIXgf_ss_testcase/src-rose/src/dfa.c
    function_name: dfamust
    line_number: 0
    feature_group: source_taint
    feature: ENVIRONMENT_VARIABLE
  - file_name: /tmp/tmpcZIXgf_ss_testcase/src-rose/src/dfa.c
    function_name: dfamust
    line_number: 0
    feature_group: data_type
    feature: simple
  - file_name: /tmp/tmpcZIXgf_ss_testcase/src-rose/src/dfa.c
    function_name: dfamust
    line_number: 0
    feature_group: data_flow
    feature: basic
  - file_name: /tmp/tmpcZIXgf_ss_testcase/src-rose/src/dfa.c
    function_name: dfamust
    line_number: 0
    feature_group: control_flow
    feature: sequence