code_complexity_features:
  - file_name: /tmp/tmpHQ5cs0_ss_testcase/src-rose/src/dfa.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: source_taint
    feature: SOCKET
  - file_name: /tmp/tmpHQ5cs0_ss_testcase/src-rose/src/dfa.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_type
    feature: simple
  - file_name: /tmp/tmpHQ5cs0_ss_testcase/src-rose/src/dfa.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_flow
    feature: basic
  - file_name: /tmp/tmpHQ5cs0_ss_testcase/src-rose/src/dfa.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: control_flow
    feature: sequence
io_pair:
  description: "This weakness expects a string in the form: '<file> <data>' where file is the name of a file that will be read to delay execution, and data is a string containing no spaces. The data string is treated as a filename in the testData directory. The weakness checks that the filename does not have any slashes in it and that it is a valid file. However, there is a time of check, time of use vulnerability after the file is checked but before it is opened allowing the file to be deleted. The weakness notifies the test harness that the that the file should be deleted by creating a file called testData/*.pid.\n\n"
  base_inputs:
    - source: socket_input
      source_enum: 5
      stage: co_process
      stage_enum: 1
      id: source
      ordinal: 1
      address: ss-localhost
      port: 8887
  exploits:
    - inputs:
        - value_type: USE_TEXT_DIRECTLY
          source: socket_input
          source_enum: 5
          value_type_enum: 0
          stage: co_process
          value: /opt/stonesoup/workspace/testData/fifo1 badfile1
          stage_enum: 1
          id: source
          ordinal: 1
          address: ss-localhost
          port: 8887
          value_encoding: none
        - source_enum: 7
          stage: pre_process
          stage_enum: 0
          id: background-complex
          source: script_input
          name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then REPLACE_FILE=\"${NEW_FILE%.pid}\"; sleep 1; echo \"Deleting: \" \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && rm -f \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && echo \"Deleted.\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
          ordinal: 2
        - source: script_input
          ordinal: 3
          source_enum: 7
          id: background
          name: runFifos.py /opt/stonesoup/workspace/testData/fifo1 --nosync
          stage: pre_process
          stage_enum: 0
        - stage_enum: 0
          value_type: USE_TEXT_DIRECTLY
          value: This is yet another file.
          value_encoding: none
          value_type_enum: 0
          name: /opt/stonesoup/workspace/testData/badfile1
          ordinal: 4
          source_enum: 3
          stage: pre_process
          source: file_content_input
    - inputs:
        - ordinal: 1
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          address: ss-localhost
          port: 8887
          value: /opt/stonesoup/workspace/testData/fifo1 badfile2
          source: socket_input
          source_enum: 5
          value_encoding: none
          stage: co_process
          stage_enum: 1
          id: source
        - source: script_input
          ordinal: 2
          stage: pre_process
          id: background-complex
          stage_enum: 0
          source_enum: 7
          name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then REPLACE_FILE=\"${NEW_FILE%.pid}\"; sleep 1; echo \"Deleting: \" \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && rm -f \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && echo \"Deleted.\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
        - ordinal: 3
          source_enum: 7
          stage: pre_process
          name: runFifos.py /opt/stonesoup/workspace/testData/fifo1 --nosync
          stage_enum: 0
          id: background
          source: script_input
        - value_encoding: none
          source_enum: 3
          stage: pre_process
          value_type_enum: 0
          ordinal: 4
          name: /opt/stonesoup/workspace/testData/badfile2
          stage_enum: 0
          value_type: USE_TEXT_DIRECTLY
          value: This is also file.
          source: file_content_input
  benigns:
    - inputs:
        - id: source
          stage_enum: 1
          source_enum: 5
          stage: co_process
          ordinal: 1
          address: ss-localhost
          port: 8887
          value: /opt/stonesoup/workspace/testData/file1 goodfile1
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          value_encoding: none
          source: socket_input
        - name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then REPLACE_FILE=\"${NEW_FILE%.pid}\"; sleep 1; echo \"Deleting: \" \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && rm -f \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && echo \"Deleted.\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
          stage: pre_process
          ordinal: 2
          id: background-complex
          stage_enum: 0
          source: script_input
          source_enum: 7
        - source: file_content_input
          stage_enum: 0
          stage: pre_process
          name: /opt/stonesoup/workspace/testData/file1
          source_enum: 3
          ordinal: 3
        - stage_enum: 0
          value_type: USE_TEXT_DIRECTLY
          value: A non-empty file.
          value_encoding: none
          source_enum: 3
          stage: pre_process
          value_type_enum: 0
          name: /opt/stonesoup/workspace/testData/goodfile1
          ordinal: 4
          source: file_content_input
    - inputs:
        - value_type: USE_TEXT_DIRECTLY
          value: /opt/stonesoup/workspace/testData/file1 goodfile2
          source_enum: 5
          id: source
          source: socket_input
          stage: co_process
          ordinal: 1
          stage_enum: 1
          address: ss-localhost
          port: 8887
          value_type_enum: 0
          value_encoding: none
        - source_enum: 7
          ordinal: 2
          stage_enum: 0
          name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then REPLACE_FILE=\"${NEW_FILE%.pid}\"; sleep 1; echo \"Deleting: \" \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && rm -f \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && echo \"Deleted.\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
          id: background-complex
          source: script_input
          stage: pre_process
        - ordinal: 3
          stage_enum: 0
          stage: pre_process
          source: file_content_input
          source_enum: 3
          name: /opt/stonesoup/workspace/testData/file1
        - ordinal: 4
          stage: pre_process
          stage_enum: 0
          source_enum: 3
          source: file_content_input
          value: This is a file.
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          name: /opt/stonesoup/workspace/testData/goodfile2
    - inputs:
        - id: source
          value: /opt/stonesoup/workspace/testData/file1 goodfile3
          ordinal: 1
          address: ss-localhost
          port: 8887
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          source: socket_input
          source_enum: 5
          stage: co_process
          stage_enum: 1
        - ordinal: 2
          source_enum: 7
          id: background-complex
          stage: pre_process
          stage_enum: 0
          source: script_input
          name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then REPLACE_FILE=\"${NEW_FILE%.pid}\"; sleep 1; echo \"Deleting: \" \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && rm -f \"/opt/stonesoup/workspace/testData/${REPLACE_FILE}\" && echo \"Deleted.\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
        - name: /opt/stonesoup/workspace/testData/file1
          stage: pre_process
          stage_enum: 0
          source: file_content_input
          source_enum: 3
          ordinal: 3
        - value_type_enum: 0
          ordinal: 4
          name: /opt/stonesoup/workspace/testData/goodfile3
          stage: pre_process
          stage_enum: 0
          source_enum: 3
          source: file_content_input
          value_type: USE_TEXT_DIRECTLY
          value: This is another file.
          value_encoding: none
description: "Creating test case using base program.\nAdded a Socket Server to accept communication from untrusted source.\nCompleted injection.\n"