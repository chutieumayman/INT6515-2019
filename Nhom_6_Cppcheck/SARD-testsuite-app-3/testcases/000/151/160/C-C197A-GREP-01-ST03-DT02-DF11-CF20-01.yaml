io_pair:
  benigns:
    - inputs:
        - stage: co_process
          stage_enum: 1
          value: 1
          port: 8887
          ordinal: 1
          address: ss-localhost
          value_type_enum: 0
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          id: source
          source_enum: 5
          source: socket_input
    - inputs:
        - stage_enum: 1
          ordinal: 1
          source: socket_input
          source_enum: 5
          id: source
          port: 8887
          value_encoding: none
          stage: co_process
          value: 10
          address: ss-localhost
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
    - inputs:
        - source: socket_input
          stage: co_process
          stage_enum: 1
          value_type_enum: 0
          id: source
          source_enum: 5
          ordinal: 1
          port: 8887
          address: ss-localhost
          value: 1000
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
  base_inputs:
    - source: socket_input
      source_enum: 5
      stage: co_process
      stage_enum: 1
      id: source
      ordinal: 1
      address: ss-localhost
      port: 8887
  description: "Read a number from the input.  Create a struct with two fields: size (unsigned short) and buffer (char*).  Initialize the struct using the unsigned short value as a size, and malloc the unsigned short value worth of bytes.  Later, memset the buffer in the struct using the number passed in as input.  Since the input is a long, and we only allocated an unsigned short amount, we will corrupt the heap, leading to seg fault or glib error. Good inputs: 65535 or less. Bad inputs: more than 65535\n\n"
  exploits:
    - inputs:
        - source: socket_input
          source_enum: 5
          stage_enum: 1
          id: source
          value_type_enum: 0
          address: ss-localhost
          ordinal: 1
          stage: co_process
          value: 65538
          value_type: USE_TEXT_DIRECTLY
          port: 8887
          value_encoding: none
    - inputs:
        - id: source
          stage: co_process
          stage_enum: 1
          value_type_enum: 0
          source: socket_input
          source_enum: 5
          address: ss-localhost
          ordinal: 1
          port: 8887
          value_encoding: none
          value: 131074
          value_type: USE_TEXT_DIRECTLY
description: "Creating test case using base program.\nAdded a Socket Server to accept communication from untrusted source.\nCompleted injection.\n"
code_complexity_features:
  - file_name: /tmp/tmpoRMsVB_ss_testcase/src-rose/src/dfa.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: source_taint
    feature: SOCKET
  - file_name: /tmp/tmpoRMsVB_ss_testcase/src-rose/src/dfa.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_type
    feature: simple
  - file_name: /tmp/tmpoRMsVB_ss_testcase/src-rose/src/dfa.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_flow
    feature: basic
  - file_name: /tmp/tmpoRMsVB_ss_testcase/src-rose/src/dfa.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: control_flow
    feature: sequence